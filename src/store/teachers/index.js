import axios from 'axios'
export const state = () => ({
    coautor: 2022
})
export const getters = {
}

export const actions = {
    async getTeachers() {
        const result = await axios.get('https://back-sucupira-ppgi.herokuapp.com/docente/')
        return result.data
    },
    async addTeachers(_, data) {
        const result = await axios.post('https://back-sucupira-ppgi.herokuapp.com/docente/', data)
        return result.data
    },
    async editTeachers(_, payload) {
        console.log(payload)
        const result = await axios.patch(`https://back-sucupira-ppgi.herokuapp.com/docente/${payload.id}`, payload.data)
        return result.data
    },
    async deleteTeachers(_, id) {
        await axios.delete(`https://back-sucupira-ppgi.herokuapp.com/docente/${id}`)
    },
    async sendJson(_, payload) {
        console.log(payload.data)
        const teste = {
            "base64" : "{
  "_declaration": {
    "_attributes": {
      "version": "1.0",
      "encoding": "ISO-8859-1",
      "standalone": "no"
    }
  },
  "CURRICULO-VITAE": {
    "_attributes": {
      "SISTEMA-ORIGEM-XML": "LATTES_OFFLINE",
      "NUMERO-IDENTIFICADOR": "8965964602138476",
      "DATA-ATUALIZACAO": "16082022",
      "HORA-ATUALIZACAO": "085532"
    },
    "DADOS-GERAIS": {
      "_attributes": {
        "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
        "NOME-EM-CITACOES-BIBLIOGRAFICAS": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
        "NACIONALIDADE": "B",
        "PAIS-DE-NASCIMENTO": "Brasil",
        "UF-NASCIMENTO": "AL",
        "CIDADE-NASCIMENTO": "Macei ",
        "PERMISSAO-DE-DIVULGACAO": "NAO",
        "DATA-FALECIMENTO": "",
        "SIGLA-PAIS-NACIONALIDADE": "BRA",
        "PAIS-DE-NACIONALIDADE": "Brasil",
        "ORCID-ID": ""
      },
      "RESUMO-CV": {
        "_attributes": {
          "TEXTO-RESUMO-CV-RH": "Doutorado em andamento pela Universidade de S o Paulo. Mestre em Ci ncia da Computa  o pela Universidade Federal de Alagoas - UFAL pelo Programa de P s-Gradua  o em Inform tica. Possui gradua  o em Ci ncia da Computa  o pela Universidade Federal de Alagoas (2014). Recebeu o pr mio de 3  (terceiro) melhor colocado na modalidade de Trabalho de Conclus o de Curso - Gradua  o pelo Simp sio Brasileiro de Inform tica na Educa  o - SBC.   revisor de peri dicos internacionais. Atua em pesquisas que envolvem aprendizagem profunda (Deep Learning), Vis o computacional, Processamento de Linguagem Natural em Dimens es Sint ticas, Sem nticas e Pragm ticas. Atualmente, J rio Santos   membro da equipe de coordena  o de Intelig ncia Artificial do projeto &quot;Plataforma Adaptativa de Avalia  o e Diagn stico Pedag gico de Textos&quot; do Minist rio de Educa  o.   co-fundador da spin-off Eneuron - Computa  o Cognitiva, empresa do ramo de tecnologias educacionais cujo objetivo   desenvolver solu  es computacionais centradas em processamento e entendimento de textos manuscritos e transcritos. Al m de desenvolver atividades de pesquisa em Minera  o de Textos e Recomenda  o Pedag gicas Personalizadas de Recursos Educacionais dispon veis na WEB.",
          "TEXTO-RESUMO-CV-RH-EN": "Phd in progress at the University of S o Paulo. Master s Degree in Computer Science, Universidade Federal de Alagoas - UFAL, Computer Science Graduate Program. He graduated in Computer Science from the Federal University of Alagoas (2014). Received the award of 3rd (third) best placed in the modality of Work Completion Course - Graduation by the Brazilian Symposium of Informatics in Education - SBC. He s a reviewer for international journals. Works in research involving deep learning (Deep Learning), Computer Vision, Natural Language Processing in Syntactic, Semantic and Pragmatic Dimensions. Currently, J rio Santos is a member of the Artificial Intelligence coordination team of the project &quot;Adaptive Platform for Evaluation and Pedagogical Diagnosis of Texts&quot; of the Ministry of Education. He is co-founder of the spin-off Eneuron - Computa  o Cognitiva, a company in the field of educational technologies whose goal is to develop computational solutions centered on processing and understanding of manuscripts and transcripts. In addition to developing research activities in Mining Texts and Personalized Pedagogical Recommendations of Educational Resources available on the Web."
        }
      },
      "ENDERECO": {
        "_attributes": {
          "FLAG-DE-PREFERENCIA": "ENDERECO_INSTITUCIONAL"
        },
        "ENDERECO-PROFISSIONAL": {
          "_attributes": {
            "CODIGO-INSTITUICAO-EMPRESA": "033100000009",
            "NOME-INSTITUICAO-EMPRESA": "Universidade Federal de Alagoas",
            "CODIGO-ORGAO": "033111000005",
            "NOME-ORGAO": "Reitoria",
            "CODIGO-UNIDADE": "033111001990",
            "NOME-UNIDADE": "Instituto de Computa  o",
            "LOGRADOURO-COMPLEMENTO": "AC Cidade Universit ria",
            "PAIS": "Brasil",
            "UF": "AL",
            "CEP": "57072970",
            "CIDADE": "Macei ",
            "BAIRRO": "Cidade Universit ria",
            "DDD": "82",
            "TELEFONE": "32141830",
            "RAMAL": "",
            "FAX": "",
            "CAIXA-POSTAL": "61",
            "HOME-PAGE": "http://www.ufal.edu.br/unidadeacademica/ic"
          }
        }
      },
      "FORMACAO-ACADEMICA-TITULACAO": {
        "GRADUACAO": {
          "_attributes": {
            "SEQUENCIA-FORMACAO": "1",
            "NIVEL": "1",
            "TITULO-DO-TRABALHO-DE-CONCLUSAO-DE-CURSO": "AVALIA  O AUTOM TICA DE ATIVIDADES ESCRITAS BASEADA EM ALGORITMO GEN TICO E PROCESSAMENTO DE LINGUAGEM NATURAL: Avaliador Ortogr fico-Gramatical",
            "NOME-DO-ORIENTADOR": "Ig Ibert Bittencourt Santana Pinto",
            "CODIGO-INSTITUICAO": "033100000009",
            "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
            "CODIGO-ORGAO": "",
            "NOME-ORGAO": "",
            "CODIGO-CURSO": "60324813",
            "NOME-CURSO": "Ci ncia da Computa  o",
            "CODIGO-AREA-CURSO": "",
            "STATUS-DO-CURSO": "CONCLUIDO",
            "ANO-DE-INICIO": "2011",
            "ANO-DE-CONCLUSAO": "2014",
            "FLAG-BOLSA": "SIM",
            "CODIGO-AGENCIA-FINANCIADORA": "002200000000",
            "NOME-AGENCIA": "Conselho Nacional de Desenvolvimento Cient fico e Tecnol gico",
            "NUMERO-ID-ORIENTADOR": "",
            "CODIGO-CURSO-CAPES": "13216",
            "TITULO-DO-TRABALHO-DE-CONCLUSAO-DE-CURSO-INGLES": "",
            "NOME-CURSO-INGLES": "",
            "FORMACAO-ACADEMICA-TITULACAO": "",
            "TIPO-GRADUACAO": "N",
            "CODIGO-INSTITUICAO-GRAD": "",
            "NOME-INSTITUICAO-GRAD": "",
            "CODIGO-INSTITUICAO-OUTRA-GRAD": "",
            "NOME-INSTITUICAO-OUTRA-GRAD": "",
            "NOME-ORIENTADOR-GRAD": ""
          }
        },
        "MESTRADO": {
          "_attributes": {
            "SEQUENCIA-FORMACAO": "2",
            "NIVEL": "3",
            "CODIGO-INSTITUICAO": "033100000009",
            "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
            "CODIGO-ORGAO": "",
            "NOME-ORGAO": "",
            "CODIGO-CURSO": "60472146",
            "NOME-CURSO": "Inform tica",
            "CODIGO-AREA-CURSO": "10300007",
            "STATUS-DO-CURSO": "CONCLUIDO",
            "ANO-DE-INICIO": "2015",
            "ANO-DE-CONCLUSAO": "2017",
            "FLAG-BOLSA": "SIM",
            "CODIGO-AGENCIA-FINANCIADORA": "002200000000",
            "NOME-AGENCIA": "Conselho Nacional de Desenvolvimento Cient fico e Tecnol gico",
            "ANO-DE-OBTENCAO-DO-TITULO": "2017",
            "TITULO-DA-DISSERTACAO-TESE": "Modelos e T cnicas para melhorar a qualidade da avalia  o autom tica para atividades escritas em L ngua Portuguesa Brasileira",
            "NOME-COMPLETO-DO-ORIENTADOR": "Ig Ibert Bittencourt Santana Pinto",
            "TIPO-MESTRADO": "N",
            "NUMERO-ID-ORIENTADOR": "4038730280834132",
            "CODIGO-CURSO-CAPES": "26001012035P1",
            "TITULO-DA-DISSERTACAO-TESE-INGLES": "",
            "NOME-CURSO-INGLES": "",
            "NOME-DO-CO-ORIENTADOR": "Ranilson Oscar Ara jo Paiva",
            "CODIGO-INSTITUICAO-DOUT": "",
            "NOME-INSTITUICAO-DOUT": "",
            "CODIGO-INSTITUICAO-OUTRA-DOUT": "",
            "NOME-INSTITUICAO-OUTRA-DOUT": "",
            "NOME-ORIENTADOR-DOUT": ""
          }
        },
        "DOUTORADO": {
          "_attributes": {
            "SEQUENCIA-FORMACAO": "3",
            "NIVEL": "4",
            "CODIGO-INSTITUICAO": "006700000002",
            "NOME-INSTITUICAO": "Universidade de S o Paulo",
            "CODIGO-ORGAO": "",
            "NOME-ORGAO": "",
            "CODIGO-CURSO": "33050040",
            "NOME-CURSO": "Ci ncias da Computa  o e Matem tica Computacional",
            "CODIGO-AREA-CURSO": "10300007",
            "STATUS-DO-CURSO": "EM_ANDAMENTO",
            "ANO-DE-INICIO": "2019",
            "ANO-DE-CONCLUSAO": "",
            "FLAG-BOLSA": "SIM",
            "CODIGO-AGENCIA-FINANCIADORA": "045000000000",
            "NOME-AGENCIA": "Coordena  o de Aperfei oamento de Pessoal de N vel Superior",
            "ANO-DE-OBTENCAO-DO-TITULO": "",
            "TITULO-DA-DISSERTACAO-TESE": "(Em Defini  o) Processamento de Linguagem Natural em Ambientes de Educa  o Online",
            "NOME-COMPLETO-DO-ORIENTADOR": "Seiji Isotani",
            "TIPO-DOUTORADO": "N",
            "CODIGO-INSTITUICAO-DOUT": "",
            "NOME-INSTITUICAO-DOUT": "",
            "CODIGO-INSTITUICAO-OUTRA-DOUT": "",
            "NOME-INSTITUICAO-OUTRA-DOUT": "",
            "NOME-ORIENTADOR-DOUT": "",
            "NUMERO-ID-ORIENTADOR": "3030047284254233",
            "CODIGO-CURSO-CAPES": "33002045004P1",
            "TITULO-DA-DISSERTACAO-TESE-INGLES": "",
            "NOME-CURSO-INGLES": "Computer Science",
            "NOME-DO-ORIENTADOR-CO-TUTELA": "",
            "CODIGO-INSTITUICAO-OUTRA-CO-TUTELA": "",
            "CODIGO-INSTITUICAO-CO-TUTELA": "",
            "NOME-DO-ORIENTADOR-SANDUICHE": "",
            "CODIGO-INSTITUICAO-OUTRA-SANDUICHE": "",
            "CODIGO-INSTITUICAO-SANDUICHE": "",
            "NOME-DO-CO-ORIENTADOR": "Ig Ibert Bittencourt"
          },
          "PALAVRAS-CHAVE": {
            "_attributes": {
              "PALAVRA-CHAVE-1": "NLP",
              "PALAVRA-CHAVE-2": "Natural Language Processing",
              "PALAVRA-CHAVE-3": "Online Education",
              "PALAVRA-CHAVE-4": "",
              "PALAVRA-CHAVE-5": "",
              "PALAVRA-CHAVE-6": ""
            }
          },
          "AREAS-DO-CONHECIMENTO": {
            "AREA-DO-CONHECIMENTO-1": {
              "_attributes": {
                "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                "NOME-DA-AREA-DO-CONHECIMENTO": "",
                "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Processamento de Linguagem Natural",
                "NOME-DA-ESPECIALIDADE": ""
              }
            },
            "AREA-DO-CONHECIMENTO-2": {
              "_attributes": {
                "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
                "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Intelig ncia Artificial",
                "NOME-DA-ESPECIALIDADE": ""
              }
            }
          },
          "SETORES-DE-ATIVIDADE": {
            "_attributes": {
              "SETOR-DE-ATIVIDADE-1": "Educa  o",
              "SETOR-DE-ATIVIDADE-2": "",
              "SETOR-DE-ATIVIDADE-3": ""
            }
          }
        }
      },
      "ATUACOES-PROFISSIONAIS": {
        "ATUACAO-PROFISSIONAL": [
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "SEQUENCIA-ATIVIDADE": "1",
              "SEQUENCIA-IMPORTANCIA": "1"
            },
            "VINCULOS": [
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "1",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "20",
                  "FLAG-DEDICACAO-EXCLUSIVA": "SIM",
                  "MES-INICIO": "01",
                  "ANO-INICIO": "2014",
                  "MES-FIM": "12",
                  "ANO-FIM": "2014",
                  "OUTRAS-INFORMACOES": "",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Livre",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Monitor Volunt rio - Metodologia e Processos",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "2",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "20",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "06",
                  "ANO-INICIO": "2014",
                  "MES-FIM": "12",
                  "ANO-FIM": "2014",
                  "OUTRAS-INFORMACOES": "",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Livre",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Monitor Volunt rio - Teoria dos Grafos",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "3",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "20",
                  "FLAG-DEDICACAO-EXCLUSIVA": "SIM",
                  "MES-INICIO": "01",
                  "ANO-INICIO": "2013",
                  "MES-FIM": "12",
                  "ANO-FIM": "2013",
                  "OUTRAS-INFORMACOES": "",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Livre",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Monitor Banco de dados 2",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "4",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "4",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "06",
                  "ANO-INICIO": "2015",
                  "MES-FIM": "12",
                  "ANO-FIM": "2015",
                  "OUTRAS-INFORMACOES": "Professor Volunt rio em Bioestat stica",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Est gio Doc ncia",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "5",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "4",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "01",
                  "ANO-INICIO": "2016",
                  "MES-FIM": "06",
                  "ANO-FIM": "2016",
                  "OUTRAS-INFORMACOES": "Professor Volunt rio de Bioestat stica",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Professor Volunt rio",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              }
            ],
            "ATIVIDADES-DE-PESQUISA-E-DESENVOLVIMENTO": {
              "PESQUISA-E-DESENVOLVIMENTO": {
                "_attributes": {
                  "SEQUENCIA-FUNCAO-ATIVIDADE": "6",
                  "FLAG-PERIODO": "ATUAL",
                  "MES-INICIO": "01",
                  "ANO-INICIO": "2015",
                  "MES-FIM": "",
                  "ANO-FIM": "",
                  "CODIGO-ORGAO": "033111000005",
                  "NOME-ORGAO": "Reitoria",
                  "CODIGO-UNIDADE": "033111001990",
                  "NOME-UNIDADE": "Instituto de Computa  o"
                },
                "LINHA-DE-PESQUISA": [
                  {
                    "_attributes": {
                      "SEQUENCIA-LINHA": "1",
                      "TITULO-DA-LINHA-DE-PESQUISA": "Minera  o de Texto",
                      "FLAG-LINHA-DE-PESQUISA-ATIVA": "NAO",
                      "OBJETIVOS-LINHA-DE-PESQUISA": "",
                      "TITULO-DA-LINHA-DE-PESQUISA-INGLES": "",
                      "OBJETIVOS-LINHA-DE-PESQUISA-INGLES": ""
                    }
                  },
                  {
                    "_attributes": {
                      "SEQUENCIA-LINHA": "2",
                      "TITULO-DA-LINHA-DE-PESQUISA": "Processamento de Linguagem Natural",
                      "FLAG-LINHA-DE-PESQUISA-ATIVA": "NAO",
                      "OBJETIVOS-LINHA-DE-PESQUISA": "",
                      "TITULO-DA-LINHA-DE-PESQUISA-INGLES": "",
                      "OBJETIVOS-LINHA-DE-PESQUISA-INGLES": ""
                    }
                  },
                  {
                    "_attributes": {
                      "SEQUENCIA-LINHA": "3",
                      "TITULO-DA-LINHA-DE-PESQUISA": "Avalia  o L xico-Sint tica",
                      "FLAG-LINHA-DE-PESQUISA-ATIVA": "NAO",
                      "OBJETIVOS-LINHA-DE-PESQUISA": "",
                      "TITULO-DA-LINHA-DE-PESQUISA-INGLES": "",
                      "OBJETIVOS-LINHA-DE-PESQUISA-INGLES": ""
                    }
                  },
                  {
                    "_attributes": {
                      "SEQUENCIA-LINHA": "4",
                      "TITULO-DA-LINHA-DE-PESQUISA": "Recupera  o de Informa  o",
                      "FLAG-LINHA-DE-PESQUISA-ATIVA": "NAO",
                      "OBJETIVOS-LINHA-DE-PESQUISA": "",
                      "TITULO-DA-LINHA-DE-PESQUISA-INGLES": "",
                      "OBJETIVOS-LINHA-DE-PESQUISA-INGLES": ""
                    }
                  }
                ]
              }
            },
            "ATIVIDADES-DE-ENSINO": {
              "ENSINO": {
                "_attributes": {
                  "SEQUENCIA-FUNCAO-ATIVIDADE": "5",
                  "FLAG-PERIODO": "ANTERIOR",
                  "TIPO-ENSINO": "GRADUACAO",
                  "MES-INICIO": "06",
                  "ANO-INICIO": "2015",
                  "MES-FIM": "06",
                  "ANO-FIM": "2016",
                  "CODIGO-ORGAO": "",
                  "NOME-ORGAO": "",
                  "CODIGO-CURSO": "60281693",
                  "NOME-CURSO": "Farm cia",
                  "NOME-CURSO-INGLES": ""
                },
                "DISCIPLINA": {
                  "_attributes": {
                    "SEQUENCIA-ESPECIFICACAO": "1"
                  },
                  "_text": "Bioestat stica"
                }
              }
            },
            "ATIVIDADES-DE-PARTICIPACAO-EM-PROJETO": {
              "PARTICIPACAO-EM-PROJETO": [
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "1",
                    "FLAG-PERIODO": "ANTERIOR",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2012",
                    "MES-FIM": "",
                    "ANO-FIM": "2014",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": {
                    "_attributes": {
                      "SEQUENCIA-PROJETO": "1",
                      "ANO-INICIO": "2012",
                      "ANO-FIM": "2014",
                      "NOME-DO-PROJETO": "SISTEMA DE GEST O INTELIGENTE DA APRENDIZAGEM COM MINERA  O DE DADOS COM DISPOSITIVOS M VEIS",
                      "SITUACAO": "CONCLUIDO",
                      "NATUREZA": "PESQUISA",
                      "NUMERO-GRADUACAO": "",
                      "NUMERO-ESPECIALIZACAO": "",
                      "NUMERO-MESTRADO-ACADEMICO": "",
                      "NUMERO-MESTRADO-PROF": "",
                      "NUMERO-DOUTORADO": "",
                      "DESCRICAO-DO-PROJETO": "Este projeto visa contribuir para uma aprendizagem mais efetiva atrav s do&#10;estudo, defini  o, desenvolvimento e aplica  o de m todos pedag gicos  s&#10;ferramentas computacionais inteligentes que viabilize a universaliza  o&#10;personalizada da educa  o, atrav s da plataforma de ensino UFAL L nguas.",
                      "IDENTIFICADOR-PROJETO": "",
                      "DESCRICAO-DO-PROJETO-INGLES": "",
                      "NOME-DO-PROJETO-INGLES": "SISTEMA DE GEST O INTELIGENTE DA APRENDIZAGEM COM MINERA  O DE DADOS COM DISPOSITIVOS M VEIS",
                      "FLAG-POTENCIAL-INOVACAO": "NAO",
                      "NOME-COORDENADOR-CERTIFICACAO": "",
                      "DATA-CERTIFICACAO": "",
                      "NUMERO_TECNICO_NIVEL_MEDIO": ""
                    },
                    "EQUIPE-DO-PROJETO": {
                      "INTEGRANTES-DO-PROJETO": [
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                            "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                            "ORDEM-DE-INTEGRACAO": "1",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "8965964602138476"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Gabriel Moretti",
                            "NOME-PARA-CITACAO": "MORETTI, G.",
                            "ORDEM-DE-INTEGRACAO": "2",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "1104078524426028"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Daniel Borges",
                            "NOME-PARA-CITACAO": "BORGES, D.",
                            "ORDEM-DE-INTEGRACAO": "3",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "0755689140229552"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Tib rio Bastos",
                            "NOME-PARA-CITACAO": "BASTOS, T.",
                            "ORDEM-DE-INTEGRACAO": "4",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "5937141923911087"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Ig Ibert Bittencourt",
                            "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                            "ORDEM-DE-INTEGRACAO": "5",
                            "FLAG-RESPONSAVEL": "SIM",
                            "NRO-ID-CNPQ": "4038730280834132"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Alan Silva",
                            "NOME-PARA-CITACAO": "SILVA, A.",
                            "ORDEM-DE-INTEGRACAO": "6",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "2752203627912781"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "4",
                    "FLAG-PERIODO": "ANTERIOR",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2011",
                    "MES-FIM": "",
                    "ANO-FIM": "2012",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": {
                    "_attributes": {
                      "SEQUENCIA-PROJETO": "4",
                      "ANO-INICIO": "2011",
                      "ANO-FIM": "2012",
                      "NOME-DO-PROJETO": "Projeto Intitulado Redes Sociais e Interatividade: Projetos Did ticos Colaborativos Interescolas no PROUCA Alagoas",
                      "SITUACAO": "CONCLUIDO",
                      "NATUREZA": "PESQUISA",
                      "NUMERO-GRADUACAO": "",
                      "NUMERO-ESPECIALIZACAO": "",
                      "NUMERO-MESTRADO-ACADEMICO": "",
                      "NUMERO-MESTRADO-PROF": "",
                      "NUMERO-DOUTORADO": "",
                      "DESCRICAO-DO-PROJETO": "Projeto que visou o desenvolvimento de ambiente Colaborativo para o programa PROUCA - Programa para um computador por aluno. O Sistema deu suporte ao uso de tecnologias sociais para um ambiente educacional para crian as.",
                      "IDENTIFICADOR-PROJETO": "",
                      "DESCRICAO-DO-PROJETO-INGLES": "",
                      "NOME-DO-PROJETO-INGLES": "",
                      "FLAG-POTENCIAL-INOVACAO": "NAO",
                      "NOME-COORDENADOR-CERTIFICACAO": "",
                      "DATA-CERTIFICACAO": "",
                      "NUMERO_TECNICO_NIVEL_MEDIO": ""
                    },
                    "EQUIPE-DO-PROJETO": {
                      "INTEGRANTES-DO-PROJETO": [
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                            "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                            "ORDEM-DE-INTEGRACAO": "1",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "8965964602138476"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Gabriel Moretti",
                            "NOME-PARA-CITACAO": "MORETTI, G.",
                            "ORDEM-DE-INTEGRACAO": "2",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "1104078524426028"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Tib rio Bastos",
                            "NOME-PARA-CITACAO": "BASTOS, T.",
                            "ORDEM-DE-INTEGRACAO": "3",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "5937141923911087"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Alan Silva",
                            "NOME-PARA-CITACAO": "SILVA, A.",
                            "ORDEM-DE-INTEGRACAO": "4",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "2752203627912781"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Luis Mercado",
                            "NOME-PARA-CITACAO": "MERCADO, L.",
                            "ORDEM-DE-INTEGRACAO": "5",
                            "FLAG-RESPONSAVEL": "SIM",
                            "NRO-ID-CNPQ": "5780536667755396"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "BORGES, DANIEL",
                            "NOME-PARA-CITACAO": "BORGES, DANIEL",
                            "ORDEM-DE-INTEGRACAO": "6",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "BITTENCOURT, IG IBERT",
                            "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                            "ORDEM-DE-INTEGRACAO": "7",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "7",
                    "FLAG-PERIODO": "ANTERIOR",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2011",
                    "MES-FIM": "",
                    "ANO-FIM": "2013",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": {
                    "_attributes": {
                      "SEQUENCIA-PROJETO": "5",
                      "ANO-INICIO": "2011",
                      "ANO-FIM": "2013",
                      "NOME-DO-PROJETO": "CNPq/CAPES/SEED-MEC - Redes Sociais e Interatividade: Projetos Did ticos Colaborativos Interescolas no PROUCA Alagoas",
                      "SITUACAO": "CONCLUIDO",
                      "NATUREZA": "PESQUISA",
                      "NUMERO-GRADUACAO": "",
                      "NUMERO-ESPECIALIZACAO": "",
                      "NUMERO-MESTRADO-ACADEMICO": "",
                      "NUMERO-MESTRADO-PROF": "",
                      "NUMERO-DOUTORADO": "",
                      "DESCRICAO-DO-PROJETO": "Descri  o: Esta pesquisa investiga a utiliza  o de redes sociais em espa o colaborativo de aprendizagem no processo ensino-aprendizagem nas escolas do PROUCA/AL. Oferece subs dios te rico-pr ticos sobre as possibilidades de utiliza  o das TIC na pr tica docente, al m de apresenta metodologia de desenvolvimento de material did tico com TIC. Com isso, o projeto visa o desenvolvimento de uma ferramenta colaborativo baseada em projetos e a sua investiga  o emp rica com no PROUCA Alagoas",
                      "IDENTIFICADOR-PROJETO": "",
                      "DESCRICAO-DO-PROJETO-INGLES": "",
                      "NOME-DO-PROJETO-INGLES": "",
                      "FLAG-POTENCIAL-INOVACAO": "NAO",
                      "NOME-COORDENADOR-CERTIFICACAO": "",
                      "DATA-CERTIFICACAO": "",
                      "NUMERO_TECNICO_NIVEL_MEDIO": ""
                    },
                    "EQUIPE-DO-PROJETO": {
                      "INTEGRANTES-DO-PROJETO": [
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                            "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                            "ORDEM-DE-INTEGRACAO": "1",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "8965964602138476"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Gabriel Moretti",
                            "NOME-PARA-CITACAO": "MORETTI, G.",
                            "ORDEM-DE-INTEGRACAO": "2",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "1104078524426028"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Daniel Borges",
                            "NOME-PARA-CITACAO": "BORGES, D.",
                            "ORDEM-DE-INTEGRACAO": "3",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "0755689140229552"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Tib rio Bastos",
                            "NOME-PARA-CITACAO": "BASTOS, T.",
                            "ORDEM-DE-INTEGRACAO": "4",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "5937141923911087"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Ig Ibert Bittencourt",
                            "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                            "ORDEM-DE-INTEGRACAO": "5",
                            "FLAG-RESPONSAVEL": "SIM",
                            "NRO-ID-CNPQ": "4038730280834132"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "8",
                    "FLAG-PERIODO": "ATUAL",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2020",
                    "MES-FIM": "",
                    "ANO-FIM": "",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": {
                    "_attributes": {
                      "SEQUENCIA-PROJETO": "6",
                      "ANO-INICIO": "2020",
                      "ANO-FIM": "",
                      "NOME-DO-PROJETO": "MEC/SEB/FNDE - PNLD Digital baseado em Evid ncias",
                      "SITUACAO": "EM_ANDAMENTO",
                      "NATUREZA": "DESENVOLVIMENTO",
                      "NUMERO-GRADUACAO": "5",
                      "NUMERO-ESPECIALIZACAO": "",
                      "NUMERO-MESTRADO-ACADEMICO": "4",
                      "NUMERO-MESTRADO-PROF": "",
                      "NUMERO-DOUTORADO": "2",
                      "DESCRICAO-DO-PROJETO": "Espera-se desenvolver atividades no  mbito da Secretaria de Educa  o B sica (SEB) do Minist rio da Educa  o segundo normas e orienta  es desta secretaria com vistas   concep  o e desenvolvimento do processo e da Plataforma de avalia  o baseada em evid ncias dos materiais e recursos digitais das obras inscritas no Programa Nacional do Livro e do Material Did tico (PNLD) 2021, 2022 e 2023. Desta forma, ser o demandadas atividades de pesquisa e desenvolvimento para garantir a manuten  o e aperfei oamento constante dos sistemas computacionais que permitam o desenvolvimento, implanta  o e manuten  o da Plataforma (denominada Plataforma Evid ncias1) para Avalia  o do Material Digital dos PNLDs 2021, 2022 e 2023. Espera ainda, no contexto deste projeto, desenvolver atividades de pesquisa e desenvolvimento para elabora  o dos guias interativos do PNLD 2020 Liter rio e do PNLD 2019 did tico revisado. Por fim, objetiva-se realizar atividades de pesquisa para desenvolvimento de um processo e de uma tecnologia de suporte   tomada de decis o baseada em dados para apoiar a tomada de decis o baseada em evid ncias dos gestores da pol tica educacional do PNLD. (Valor aprox. R$ 3.000.000,00).",
                      "IDENTIFICADOR-PROJETO": "",
                      "DESCRICAO-DO-PROJETO-INGLES": "",
                      "NOME-DO-PROJETO-INGLES": "",
                      "FLAG-POTENCIAL-INOVACAO": "NAO",
                      "NOME-COORDENADOR-CERTIFICACAO": "",
                      "DATA-CERTIFICACAO": "",
                      "NUMERO_TECNICO_NIVEL_MEDIO": ""
                    },
                    "EQUIPE-DO-PROJETO": {
                      "INTEGRANTES-DO-PROJETO": [
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                            "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                            "ORDEM-DE-INTEGRACAO": "1",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "8965964602138476"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Diego Dermeval",
                            "NOME-PARA-CITACAO": "DERMEVAL, D.",
                            "ORDEM-DE-INTEGRACAO": "2",
                            "FLAG-RESPONSAVEL": "SIM",
                            "NRO-ID-CNPQ": "7400572752663161"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Ig Ibert Bittencourt Santana Pinto",
                            "NOME-PARA-CITACAO": "I. Ig",
                            "ORDEM-DE-INTEGRACAO": "3",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Alan Pedro da Silva",
                            "NOME-PARA-CITACAO": "Silva, P. A.",
                            "ORDEM-DE-INTEGRACAO": "4",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Seiji Isotani",
                            "NOME-PARA-CITACAO": "Isotani S.",
                            "ORDEM-DE-INTEGRACAO": "5",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Ibsen Mateus Bittencourt",
                            "NOME-PARA-CITACAO": "Bittencourt I.",
                            "ORDEM-DE-INTEGRACAO": "6",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Ranilson Paiva",
                            "NOME-PARA-CITACAO": "Paiva R.",
                            "ORDEM-DE-INTEGRACAO": "7",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Leonardo Marques",
                            "NOME-PARA-CITACAO": "Marques L.",
                            "ORDEM-DE-INTEGRACAO": "8",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "Kamilla Ten rio",
                            "NOME-PARA-CITACAO": "Ten rio K.",
                            "ORDEM-DE-INTEGRACAO": "9",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "9",
                    "FLAG-PERIODO": "ATUAL",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2021",
                    "MES-FIM": "",
                    "ANO-FIM": "",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": [
                    {
                      "_attributes": {
                        "SEQUENCIA-PROJETO": "8",
                        "ANO-INICIO": "2021",
                        "ANO-FIM": "",
                        "NOME-DO-PROJETO": "Plataforma Adaptativa de Avalia  o e Diagn stico Pedag gico de Textos",
                        "SITUACAO": "EM_ANDAMENTO",
                        "NATUREZA": "DESENVOLVIMENTO",
                        "NUMERO-GRADUACAO": "",
                        "NUMERO-ESPECIALIZACAO": "",
                        "NUMERO-MESTRADO-ACADEMICO": "",
                        "NUMERO-MESTRADO-PROF": "",
                        "NUMERO-DOUTORADO": "",
                        "DESCRICAO-DO-PROJETO": "Desenvolver um modelo de Avalia  o Textual, com foco principal em avalia  o de reda  o de forma a garantir redu  o de custo e a sobrecarga gerada para os professores, de modo que os deixem livres para executar as seguintes a  es: (1) observar outras necessidades educacionais dos alunos e; (2) prover aux lio pedag gico por meio de coment rios e apontamentos de erros para desvios cometidos por alunos em sua produ  o textual. Esta redu  o no tempo de avalia  o garante um tempo de resposta h bil para o aluno praticar mais, com o conhecimento do que estava errando. Ser o destacados m dulos espec ficos para detec  o de pl gio, textos incoerentes ou tentativas de cheating (inser  es de passagens com receitas e letras de m sica para aumentar a quantidade de palavras no texto).",
                        "IDENTIFICADOR-PROJETO": "",
                        "DESCRICAO-DO-PROJETO-INGLES": "",
                        "NOME-DO-PROJETO-INGLES": "",
                        "FLAG-POTENCIAL-INOVACAO": "NAO",
                        "NOME-COORDENADOR-CERTIFICACAO": "",
                        "DATA-CERTIFICACAO": "",
                        "NUMERO_TECNICO_NIVEL_MEDIO": ""
                      },
                      "EQUIPE-DO-PROJETO": {
                        "INTEGRANTES-DO-PROJETO": [
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                              "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                              "ORDEM-DE-INTEGRACAO": "1",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": "8965964602138476"
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Ig Ibert Bittencourt Santana Pinto",
                              "NOME-PARA-CITACAO": "I. Ig",
                              "ORDEM-DE-INTEGRACAO": "2",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Seiji Isotani",
                              "NOME-PARA-CITACAO": "Isotani S.",
                              "ORDEM-DE-INTEGRACAO": "3",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Thiago Damasceno Cordeiro",
                              "NOME-PARA-CITACAO": "Cordeiro T.",
                              "ORDEM-DE-INTEGRACAO": "4",
                              "FLAG-RESPONSAVEL": "SIM",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Rodrigo Lisb a Pereira",
                              "NOME-PARA-CITACAO": "Lisb a R.",
                              "ORDEM-DE-INTEGRACAO": "5",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Edson Koiti Kudo Yasojima",
                              "NOME-PARA-CITACAO": "Koiti E.",
                              "ORDEM-DE-INTEGRACAO": "6",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Carlos dos Santos Portela",
                              "NOME-PARA-CITACAO": "Portela C.",
                              "ORDEM-DE-INTEGRACAO": "7",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Rafael Ferreira Leite de Mello",
                              "NOME-PARA-CITACAO": "Mello R.",
                              "ORDEM-DE-INTEGRACAO": "8",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Leonardo Brand o Marques",
                              "NOME-PARA-CITACAO": "Marques L.",
                              "ORDEM-DE-INTEGRACAO": "9",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          }
                        ]
                      }
                    },
                    {
                      "_attributes": {
                        "SEQUENCIA-PROJETO": "7",
                        "ANO-INICIO": "2021",
                        "ANO-FIM": "",
                        "NOME-DO-PROJETO": "FAPEAL/SECTI/SEBRAE-AL/FIEA/IEL - Desenvolvimento e Comercializa  o de uma Plataforma Educacional de Corre  o Autom tica e Recomenda  o Pedag gica de Textos Transcritos e Manuscritos",
                        "SITUACAO": "EM_ANDAMENTO",
                        "NATUREZA": "DESENVOLVIMENTO",
                        "NUMERO-GRADUACAO": "",
                        "NUMERO-ESPECIALIZACAO": "",
                        "NUMERO-MESTRADO-ACADEMICO": "",
                        "NUMERO-MESTRADO-PROF": "",
                        "NUMERO-DOUTORADO": "1",
                        "DESCRICAO-DO-PROJETO": "O objetivo geral deste projeto   o desenvolvimento e comercializa  o de um produto inovador para o contexto nacional na  rea de educa  o. Isto ser  feito atrav s do estudo, defini  o, desenvolvimento e comercializa  o de uma plataforma educacional inteligente (Analise) que, atrav s do uso de t cnicas de Aprendizagem Profunda (Deep Learning), far  corre  o textuais em l ngua portuguesa, tanto de textos transcritos (digitados) quanto manuscritos (escritos   m o). Al m disso, a plataforma fer  a recomenda  o pedag gica, auxiliando os estudantes em como melhorar sua escrita e consequentemente uma nota em avalia  es (e.g. ENEM). Com a inser  o de recursos na empresa eNeuron, t m-se como m tricas basilares i) o desenvolvimento da Plataforma Analise para escolas e corpora  es, ii) comercializa  o desta tecnologia em todo o cen rio nacional, iii) transfer ncia de tecnologia para implanta  o da inova  o na empresa, e iv) a convers o dos benef cios da inova  o da Plataforma Analise para o Estado de Alagoas. (Valor Aprox. R$ 400.000,00).",
                        "IDENTIFICADOR-PROJETO": "",
                        "DESCRICAO-DO-PROJETO-INGLES": "",
                        "NOME-DO-PROJETO-INGLES": "",
                        "FLAG-POTENCIAL-INOVACAO": "NAO",
                        "NOME-COORDENADOR-CERTIFICACAO": "",
                        "DATA-CERTIFICACAO": "",
                        "NUMERO_TECNICO_NIVEL_MEDIO": ""
                      },
                      "EQUIPE-DO-PROJETO": {
                        "INTEGRANTES-DO-PROJETO": [
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                              "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                              "ORDEM-DE-INTEGRACAO": "1",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": "8965964602138476"
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Ig Ibert Bittencourt",
                              "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                              "ORDEM-DE-INTEGRACAO": "2",
                              "FLAG-RESPONSAVEL": "SIM",
                              "NRO-ID-CNPQ": "4038730280834132"
                            }
                          },
                          {
                            "_attributes": {
                              "NOME-COMPLETO": "Alan Pedro da Silva",
                              "NOME-PARA-CITACAO": "Silva, P. A.",
                              "ORDEM-DE-INTEGRACAO": "3",
                              "FLAG-RESPONSAVEL": "NAO",
                              "NRO-ID-CNPQ": ""
                            }
                          }
                        ]
                      },
                      "FINANCIADORES-DO-PROJETO": {
                        "FINANCIADOR-DO-PROJETO": {
                          "_attributes": {
                            "SEQUENCIA-FINANCIADOR": "1",
                            "CODIGO-INSTITUICAO": "036500000000",
                            "NOME-INSTITUICAO": "Funda  o de Amparo   Pesquisa do Estado de Alagoas",
                            "NATUREZA": "AUXILIO_FINANCEIRO"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "SEQUENCIA-FUNCAO-ATIVIDADE": "3",
                    "FLAG-PERIODO": "ANTERIOR",
                    "MES-INICIO": "",
                    "ANO-INICIO": "2014",
                    "MES-FIM": "",
                    "ANO-FIM": "2014",
                    "CODIGO-ORGAO": "033111000005",
                    "NOME-ORGAO": "Reitoria",
                    "CODIGO-UNIDADE": "033111001990",
                    "NOME-UNIDADE": "Instituto de Computa  o"
                  },
                  "PROJETO-DE-PESQUISA": {
                    "_attributes": {
                      "SEQUENCIA-PROJETO": "3",
                      "ANO-INICIO": "2014",
                      "ANO-FIM": "2014",
                      "NOME-DO-PROJETO": "SISTEMA DE GEST O INTELIGENTE DA APRENDIZAGEM PARA ENSINO DE REDA  O",
                      "SITUACAO": "CONCLUIDO",
                      "NATUREZA": "DESENVOLVIMENTO",
                      "NUMERO-GRADUACAO": "",
                      "NUMERO-ESPECIALIZACAO": "",
                      "NUMERO-MESTRADO-ACADEMICO": "",
                      "NUMERO-MESTRADO-PROF": "",
                      "NUMERO-DOUTORADO": "",
                      "DESCRICAO-DO-PROJETO": "Sistemas Tutores Inteligentes s o sistemas educacionais que fazem uso de recursos da intelig ncia artificial para personalizar a aprendizagem de acordo com a necessidade de cada estudante. No entanto, em dom nios maus definidos (ou seja, dom nios subjetivos como reda  o), a aplica  o de sistemas tutores inteligentes ainda   um desafio. Este projeto busca desenvolver pesquisa de inova  o tecnol gica para uma aprendizagem mais efetiva de reda  o atrav s do estudo, defini  o, desenvolvimento e aplica  o de t cnicas de PLN (processamento de linguagem natural) e dispositivos m veis em ambientes de aprendizagem inteligentes.",
                      "IDENTIFICADOR-PROJETO": "",
                      "DESCRICAO-DO-PROJETO-INGLES": "",
                      "NOME-DO-PROJETO-INGLES": "SISTEMA DE GEST O INTELIGENTE DA APRENDIZAGEM PARA ENSINO DE REDA  O",
                      "FLAG-POTENCIAL-INOVACAO": "NAO",
                      "NOME-COORDENADOR-CERTIFICACAO": "",
                      "DATA-CERTIFICACAO": "",
                      "NUMERO_TECNICO_NIVEL_MEDIO": ""
                    },
                    "EQUIPE-DO-PROJETO": {
                      "INTEGRANTES-DO-PROJETO": [
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "J rio Jos  dos Santos J nior",
                            "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                            "ORDEM-DE-INTEGRACAO": "1",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": "8965964602138476"
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "BORGES, DANIEL",
                            "NOME-PARA-CITACAO": "BORGES, DANIEL",
                            "ORDEM-DE-INTEGRACAO": "2",
                            "FLAG-RESPONSAVEL": "NAO",
                            "NRO-ID-CNPQ": ""
                          }
                        },
                        {
                          "_attributes": {
                            "NOME-COMPLETO": "BITTENCOURT, IG IBERT",
                            "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                            "ORDEM-DE-INTEGRACAO": "3",
                            "FLAG-RESPONSAVEL": "SIM",
                            "NRO-ID-CNPQ": ""
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "JDN200000008",
              "NOME-INSTITUICAO": "Meututor Solu  es Educacionais",
              "SEQUENCIA-ATIVIDADE": "2",
              "SEQUENCIA-IMPORTANCIA": "2"
            },
            "VINCULOS": {
              "_attributes": {
                "SEQUENCIA-HISTORICO": "1",
                "TIPO-DE-VINCULO": "LIVRE",
                "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                "CARGA-HORARIA-SEMANAL": "6",
                "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                "MES-INICIO": "06",
                "ANO-INICIO": "2013",
                "MES-FIM": "12",
                "ANO-FIM": "2014",
                "OUTRAS-INFORMACOES": "",
                "FLAG-VINCULO-EMPREGATICIO": "SIM",
                "OUTRO-VINCULO-INFORMADO": "Bolsista",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Pesquisador - Desenvolvedor",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                "OUTRAS-INFORMACOES-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000300000995",
              "NOME-INSTITUICAO": "System Idiomas",
              "SEQUENCIA-ATIVIDADE": "3",
              "SEQUENCIA-IMPORTANCIA": "3"
            },
            "VINCULOS": {
              "_attributes": {
                "SEQUENCIA-HISTORICO": "1",
                "TIPO-DE-VINCULO": "CELETISTA",
                "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                "CARGA-HORARIA-SEMANAL": "44",
                "FLAG-DEDICACAO-EXCLUSIVA": "SIM",
                "MES-INICIO": "08",
                "ANO-INICIO": "2017",
                "MES-FIM": "01",
                "ANO-FIM": "2019",
                "OUTRAS-INFORMACOES": "",
                "FLAG-VINCULO-EMPREGATICIO": "NAO",
                "OUTRO-VINCULO-INFORMADO": "",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Engenheiro de Intelig ncia Artificial",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                "OUTRAS-INFORMACOES-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000400000997",
              "NOME-INSTITUICAO": "Education and Information Technologies - Springer Nature",
              "SEQUENCIA-ATIVIDADE": "4",
              "SEQUENCIA-IMPORTANCIA": ""
            },
            "VINCULOS": {
              "_attributes": {
                "SEQUENCIA-HISTORICO": "1",
                "TIPO-DE-VINCULO": "LIVRE",
                "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                "CARGA-HORARIA-SEMANAL": "",
                "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                "MES-INICIO": "02",
                "ANO-INICIO": "2022",
                "MES-FIM": "",
                "ANO-FIM": "",
                "OUTRAS-INFORMACOES": "",
                "FLAG-VINCULO-EMPREGATICIO": "SIM",
                "OUTRO-VINCULO-INFORMADO": "Revisor de peri dico",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                "OUTRAS-INFORMACOES-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "006700000002",
              "NOME-INSTITUICAO": "Universidade de S o Paulo",
              "SEQUENCIA-ATIVIDADE": "6",
              "SEQUENCIA-IMPORTANCIA": "4"
            },
            "VINCULOS": [
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "1",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "08",
                  "ANO-INICIO": "2021",
                  "MES-FIM": "12",
                  "ANO-FIM": "2021",
                  "OUTRAS-INFORMACOES": "Disciplina: Computa  o Afetiva: Fundamentos e Aplica  es na  rea Educacional do curso de P s-Gradua  o em Computa  o Aplicada   Educa  o e Tecnologias Educacionais do Instituto de Ci ncias Matem ticas e de Computa  o (ICMC) da Universidade de S o Paulo (USP)",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "2",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "11",
                  "ANO-INICIO": "2019",
                  "MES-FIM": "03",
                  "ANO-FIM": "2020",
                  "OUTRAS-INFORMACOES": "Disciplina: Aprendizagem Colaborativa com Suporte Computacional na Era da Web Social do Curso de Especializa  o em Computa  o Aplicada   Educa  o do Instituto de Ci ncias Matem ticas e de Computa  o (ICMC) da Universidade de S o Paulo (USP)",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "3",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "10",
                  "ANO-INICIO": "2019",
                  "MES-FIM": "12",
                  "ANO-FIM": "2019",
                  "OUTRAS-INFORMACOES": "Disciplina: Design Science Research (DSR) do Curso de Especializa  o em Computa  o Aplicada   Educa  o do Instituto de Ci ncias Matem ticas e de Computa  o (ICMC) da Universidade de S o Paulo (USP)",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "4",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "07",
                  "ANO-INICIO": "2021",
                  "MES-FIM": "10",
                  "ANO-FIM": "2021",
                  "OUTRAS-INFORMACOES": "Disciplina: Gamifica  o na Educa  o do curso de P s-Gradua  o em Computa  o Aplicada   Educa  o e Tecnologias Educacionais do Instituto de Ci ncias Matem ticas e de Computa  o (ICMC) da Universidade de S o Paulo (USP)",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "5",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "02",
                  "ANO-INICIO": "2021",
                  "MES-FIM": "05",
                  "ANO-FIM": "2021",
                  "OUTRAS-INFORMACOES": "Disciplina: Intelig ncia Artificial na Educa  o do curso de P s-Gradua  o em Computa  o Aplicada   Educa  o e Tecnologias Educacionais do Instituto de Ci ncias Matem ticas e de Computa  o (ICMC) da Universidade de S o Paulo (USP)",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Bolsista",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              },
              {
                "_attributes": {
                  "SEQUENCIA-HISTORICO": "6",
                  "TIPO-DE-VINCULO": "LIVRE",
                  "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                  "CARGA-HORARIA-SEMANAL": "6",
                  "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                  "MES-INICIO": "07",
                  "ANO-INICIO": "2019",
                  "MES-FIM": "11",
                  "ANO-FIM": "2019",
                  "OUTRAS-INFORMACOES": "Disciplina SSC0724 - Sistemas Educacionais Avan ados, do Departamento de Sistemas de Computa  o, do(a) Instituto de Ci ncias Matem ticas e de Computa  o, aos alunos de gradua  o, sob supervis o do(a) Prof(a). Seiji Isotani. 120 horas totais",
                  "FLAG-VINCULO-EMPREGATICIO": "SIM",
                  "OUTRO-VINCULO-INFORMADO": "Est gio Doc ncia",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Presencial / Professor Assistente",
                  "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                  "OUTRAS-INFORMACOES-INGLES": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000500000999",
              "NOME-INSTITUICAO": "Instituto de Tecnologia e Lideran a",
              "SEQUENCIA-ATIVIDADE": "7",
              "SEQUENCIA-IMPORTANCIA": "5"
            },
            "VINCULOS": {
              "_attributes": {
                "SEQUENCIA-HISTORICO": "1",
                "TIPO-DE-VINCULO": "LIVRE",
                "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                "CARGA-HORARIA-SEMANAL": "15",
                "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                "MES-INICIO": "09",
                "ANO-INICIO": "2020",
                "MES-FIM": "11",
                "ANO-FIM": "2020",
                "OUTRAS-INFORMACOES": "Temas Ministrados: Configura  o do ambiente de trabalho; Padr es de projeto e boas pr ticas de programa  o web; D vidas sobre os problem sets: Servidor (Python); Aprofundamento em MVC, Tornado e SQL; D vidas sobre desenvolvimento e banco de dados. 300 horas totais.",
                "FLAG-VINCULO-EMPREGATICIO": "SIM",
                "OUTRO-VINCULO-INFORMADO": "Bolsista",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "Tutor Online / Professor Assistente",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                "OUTRAS-INFORMACOES-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000600000990",
              "NOME-INSTITUICAO": "Eneuron computa  o cognitiva - LTDA",
              "SEQUENCIA-ATIVIDADE": "8",
              "SEQUENCIA-IMPORTANCIA": "6"
            },
            "VINCULOS": {
              "_attributes": {
                "SEQUENCIA-HISTORICO": "1",
                "TIPO-DE-VINCULO": "LIVRE",
                "ENQUADRAMENTO-FUNCIONAL": "LIVRE",
                "CARGA-HORARIA-SEMANAL": "",
                "FLAG-DEDICACAO-EXCLUSIVA": "NAO",
                "MES-INICIO": "10",
                "ANO-INICIO": "2018",
                "MES-FIM": "",
                "ANO-FIM": "",
                "OUTRAS-INFORMACOES": "",
                "FLAG-VINCULO-EMPREGATICIO": "SIM",
                "OUTRO-VINCULO-INFORMADO": "S cio - Fundador",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO": "S cio Cotista",
                "OUTRO-ENQUADRAMENTO-FUNCIONAL-INFORMADO-INGLES": "",
                "OUTRAS-INFORMACOES-INGLES": ""
              }
            }
          }
        ]
      },
      "AREAS-DE-ATUACAO": {
        "AREA-DE-ATUACAO": [
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "1",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Processamento de Linguagem Natural",
              "NOME-DA-ESPECIALIDADE": ""
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "2",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Minera  o de Textos",
              "NOME-DA-ESPECIALIDADE": ""
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "3",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Vis o Computacional",
              "NOME-DA-ESPECIALIDADE": ""
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "4",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Aprendizagem Profunda",
              "NOME-DA-ESPECIALIDADE": ""
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "5",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Engenharia de Software",
              "NOME-DA-ESPECIALIDADE": ""
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-AREA-DE-ATUACAO": "6",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Tecnologias Educacionais",
              "NOME-DA-ESPECIALIDADE": ""
            }
          }
        ]
      },
      "IDIOMAS": {
        "IDIOMA": [
          {
            "_attributes": {
              "IDIOMA": "PT",
              "DESCRICAO-DO-IDIOMA": "Portugu s",
              "PROFICIENCIA-DE-LEITURA": "BEM",
              "PROFICIENCIA-DE-FALA": "BEM",
              "PROFICIENCIA-DE-ESCRITA": "BEM",
              "PROFICIENCIA-DE-COMPREENSAO": "BEM"
            }
          },
          {
            "_attributes": {
              "IDIOMA": "EN",
              "DESCRICAO-DO-IDIOMA": "Ingl s",
              "PROFICIENCIA-DE-LEITURA": "RAZOAVELMENTE",
              "PROFICIENCIA-DE-FALA": "POUCO",
              "PROFICIENCIA-DE-ESCRITA": "RAZOAVELMENTE",
              "PROFICIENCIA-DE-COMPREENSAO": "RAZOAVELMENTE"
            }
          }
        ]
      },
      "PREMIOS-TITULOS": {
        "PREMIO-TITULO": [
          {
            "_attributes": {
              "NOME-DO-PREMIO-OU-TITULO": "3  Colocado do Concurso de Teses e Disserta  es de Inform tica na Educa  o (CTD-IE) - Modalidade TCC",
              "NOME-DA-ENTIDADE-PROMOTORA": "Simp sio Brasileiro de Inform tica na Educa  o, Sociedade Brasileira de Computa  o",
              "ANO-DA-PREMIACAO": "2015",
              "NOME-DO-PREMIO-OU-TITULO-INGLES": ""
            }
          },
          {
            "_attributes": {
              "NOME-DO-PREMIO-OU-TITULO": "Men  o Honrosa pelo TCC Gen tica no Ensino M dio: as m dias digitais e a compreens o de conte dos abstratos , aluna Adeline Gisele Teixeira da Silva",
              "NOME-DA-ENTIDADE-PROMOTORA": "Especializa  o em Computa  o aplicada   Educa  o - ICMC - Universidade de S o Paulo",
              "ANO-DA-PREMIACAO": "2020",
              "NOME-DO-PREMIO-OU-TITULO-INGLES": ""
            }
          }
        ]
      }
    },
    "PRODUCAO-BIBLIOGRAFICA": {
      "TRABALHOS-EM-EVENTOS": {
        "TRABALHO-EM-EVENTOS": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "1"
            },
            "DADOS-BASICOS-DO-TRABALHO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-TRABALHO": "Um Ambiente Colaborativo baseado em Projeto para o UCA.",
                "ANO-DO-TRABALHO": "2012",
                "PAIS-DO-EVENTO": "Brasil",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "[http://br-ie.org/pub/index.php/wcbie/article/view/1916/1678]",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-DO-TRABALHO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-TRABALHO": {
              "_attributes": {
                "CLASSIFICACAO-DO-EVENTO": "NACIONAL",
                "NOME-DO-EVENTO": "II Workshop sobre forma  o e experi ncias educacionais no projeto Um Computador por Aluno (UCA)",
                "CIDADE-DO-EVENTO": "Rio de Janeiro",
                "ANO-DE-REALIZACAO": "2012",
                "TITULO-DOS-ANAIS-OU-PROCEEDINGS": "Anais do II Workshop sobre forma  o e experi ncias educacionais no projeto Um Computador por Aluno (UCA)",
                "VOLUME": "",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "",
                "PAGINA-FINAL": "",
                "ISBN": "",
                "NOME-DA-EDITORA": "",
                "CIDADE-DA-EDITORA": "",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J.;SANTOS, J RIO;JOS , J RIO;Santos, J rio Jos ",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "8965964602138476"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Gabriel Moretti",
                  "NOME-PARA-CITACAO": "MORETTI, G.",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": "1104078524426028"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Daniel Borges",
                  "NOME-PARA-CITACAO": "BORGES, D.",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": "0755689140229552"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Tib rio Bastos",
                  "NOME-PARA-CITACAO": "BASTOS, T.",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": "5937141923911087"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Diego Dermeval",
                  "NOME-PARA-CITACAO": "DERMEVAL, D.",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": "7400572752663161"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ig Ibert Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                  "ORDEM-DE-AUTORIA": "6",
                  "NRO-ID-CNPQ": "4038730280834132"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Alan Silva",
                  "NOME-PARA-CITACAO": "SILVA, A.",
                  "ORDEM-DE-AUTORIA": "7",
                  "NRO-ID-CNPQ": "2752203627912781"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Luis Mercado",
                  "NOME-PARA-CITACAO": "MERCADO, L.",
                  "ORDEM-DE-AUTORIA": "8",
                  "NRO-ID-CNPQ": "5780536667755396"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ibsen Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I.",
                  "ORDEM-DE-AUTORIA": "9",
                  "NRO-ID-CNPQ": "9677263203563065"
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "2"
            },
            "DADOS-BASICOS-DO-TRABALHO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-TRABALHO": "Lessons learned from an online open course",
                "ANO-DO-TRABALHO": "2014",
                "PAIS-DO-EVENTO": "Cor ia do Sul",
                "IDIOMA": "Ingl s",
                "MEIO-DE-DIVULGACAO": "NAO_INFORMADO",
                "HOME-PAGE-DO-TRABALHO": "[http://dl.acm.org/citation.cfm?id=2555024]",
                "FLAG-RELEVANCIA": "SIM",
                "DOI": "10.1145/2554850.2555024",
                "TITULO-DO-TRABALHO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-TRABALHO": {
              "_attributes": {
                "CLASSIFICACAO-DO-EVENTO": "INTERNACIONAL",
                "NOME-DO-EVENTO": "the 29th Annual ACM Symposium",
                "CIDADE-DO-EVENTO": "Gyeongju",
                "ANO-DE-REALIZACAO": "2014",
                "TITULO-DOS-ANAIS-OU-PROCEEDINGS": "Proceedings of the 29th Annual ACM Symposium on Applied Computing - SAC &apos;14",
                "VOLUME": "",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "229",
                "PAGINA-FINAL": "234",
                "ISBN": "9781450324694",
                "NOME-DA-EDITORA": "",
                "CIDADE-DA-EDITORA": "",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "PAIVA, RANILSON",
                  "NOME-PARA-CITACAO": "PAIVA, RANILSON",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "1714190463540106"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BORGES, DANIEL",
                  "NOME-PARA-CITACAO": "BORGES, DANIEL",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "DA SILVA, ALAN PEDRO",
                  "NOME-PARA-CITACAO": "DA SILVA, ALAN PEDRO",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "3"
            },
            "DADOS-BASICOS-DO-TRABALHO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-TRABALHO": "AVALIA  O AUTOM TICA DE ATIVIDADES ESCRITAS BASEADA EM ALGORITMO GEN TICO E PROCESSAMENTO DE LINGUAGEM NATURAL: Avaliador Ortogr fico-Gramatical",
                "ANO-DO-TRABALHO": "2015",
                "PAIS-DO-EVENTO": "Brasil",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "NAO_INFORMADO",
                "HOME-PAGE-DO-TRABALHO": "",
                "FLAG-RELEVANCIA": "SIM",
                "DOI": "10.5753/cbie.wcbie.2015.95",
                "TITULO-DO-TRABALHO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-TRABALHO": {
              "_attributes": {
                "CLASSIFICACAO-DO-EVENTO": "INTERNACIONAL",
                "NOME-DO-EVENTO": "Concurso de Teses e Disserta  es em Inform tica na Educa  o",
                "CIDADE-DO-EVENTO": "Macei ",
                "ANO-DE-REALIZACAO": "2015",
                "TITULO-DOS-ANAIS-OU-PROCEEDINGS": "",
                "VOLUME": "",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "95",
                "PAGINA-FINAL": "",
                "ISBN": "",
                "NOME-DA-EDITORA": "",
                "CIDADE-DA-EDITORA": "",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "JOS , J RIO",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "PAIVA, RANILSON",
                  "NOME-PARA-CITACAO": "PAIVA, RANILSON",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": "1714190463540106"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "7"
            },
            "DADOS-BASICOS-DO-TRABALHO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-TRABALHO": "Conquistando com o Resto: Um Jogo Para o Ensino de Conceitos de Divis o",
                "ANO-DO-TRABALHO": "2015",
                "PAIS-DO-EVENTO": "Brasil",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "NAO_INFORMADO",
                "HOME-PAGE-DO-TRABALHO": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "10.5753/cbie.wcbie.2015.342",
                "TITULO-DO-TRABALHO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-TRABALHO": {
              "_attributes": {
                "CLASSIFICACAO-DO-EVENTO": "NACIONAL",
                "NOME-DO-EVENTO": "I Concurso Integrado de Desenvolvimento de Solu  es de Tecnologia e Objetos de Aprendizagem para a Educa  o",
                "CIDADE-DO-EVENTO": "Macei ",
                "ANO-DE-REALIZACAO": "2015",
                "TITULO-DOS-ANAIS-OU-PROCEEDINGS": "org.crossref.xschema._1.Title@4ae903c4",
                "VOLUME": "",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "342",
                "PAGINA-FINAL": "",
                "ISBN": "",
                "NOME-DA-EDITORA": "",
                "CIDADE-DA-EDITORA": "",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "OLIVEIRA, WILK",
                  "NOME-PARA-CITACAO": "OLIVEIRA, WILK",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "0107471108162891"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "JOS , J RIO",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BORGES, DANIEL",
                  "NOME-PARA-CITACAO": "BORGES, DANIEL",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "NOME-PARA-CITACAO": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "8"
            },
            "DADOS-BASICOS-DO-TRABALHO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-TRABALHO": "Desafios com Palitos: Um Jogo Para o Ensino de Conceitos Espec ficos de Matem tica",
                "ANO-DO-TRABALHO": "2015",
                "PAIS-DO-EVENTO": "Brasil",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "NAO_INFORMADO",
                "HOME-PAGE-DO-TRABALHO": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "10.5753/cbie.wcbie.2015.334",
                "TITULO-DO-TRABALHO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-TRABALHO": {
              "_attributes": {
                "CLASSIFICACAO-DO-EVENTO": "NAO_INFORMADO",
                "NOME-DO-EVENTO": "I Concurso Integrado de Desenvolvimento de Solu  es de Tecnologia e Objetos de Aprendizagem para a Educa  o",
                "CIDADE-DO-EVENTO": "Macei ",
                "ANO-DE-REALIZACAO": "2015",
                "TITULO-DOS-ANAIS-OU-PROCEEDINGS": "org.crossref.xschema._1.Title@ba927a7",
                "VOLUME": "",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "334",
                "PAGINA-FINAL": "",
                "ISBN": "",
                "NOME-DA-EDITORA": "",
                "CIDADE-DA-EDITORA": "",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "OLIVEIRA, WILK",
                  "NOME-PARA-CITACAO": "OLIVEIRA, WILK",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "0107471108162891"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BORGES, DANIEL",
                  "NOME-PARA-CITACAO": "BORGES, DANIEL",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "JOS , J RIO",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "NOME-PARA-CITACAO": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          }
        ]
      },
      "ARTIGOS-PUBLICADOS": {
        "ARTIGO-PUBLICADO": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "4",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "Avalia  o L xico-Sint tica de Atividades Escritas em Algoritmo Gen tico e Processamento de Linguagem Natural: Um Experimento no ENEM",
                "ANO-DO-ARTIGO": "2016",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "[http://br-ie.org/pub/index.php/rbie/article/view/6450][doi:10.5753/rbie.2016.24.02.92]",
                "FLAG-RELEVANCIA": "SIM",
                "DOI": "10.5753/rbie.2016.24.02.92",
                "TITULO-DO-ARTIGO-INGLES": "exical-Syntactic Evaluation of written activities based on Genetic Algorithm and Natural Language Processing: An experiment on ENEM",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "Revista Brasileira de Inform tica na Educa  o",
                "ISSN": "14145685",
                "VOLUME": "24",
                "FASCICULO": "",
                "SERIE": "02",
                "PAGINA-INICIAL": "92",
                "PAGINA-FINAL": "",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "Santos, J rio Jos ",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "PAIVA, RANILSON",
                  "NOME-PARA-CITACAO": "PAIVA, RANILSON",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": "1714190463540106"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "IBERT BITTENCOURT, IG",
                  "NOME-PARA-CITACAO": "IBERT BITTENCOURT, IG",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              }
            ],
            "PALAVRAS-CHAVE": {
              "_attributes": {
                "PALAVRA-CHAVE-1": "NLP",
                "PALAVRA-CHAVE-2": "Natural Language Processing",
                "PALAVRA-CHAVE-3": "Evaluation of Written activities",
                "PALAVRA-CHAVE-4": "",
                "PALAVRA-CHAVE-5": "",
                "PALAVRA-CHAVE-6": ""
              }
            },
            "AREAS-DO-CONHECIMENTO": {
              "AREA-DO-CONHECIMENTO-1": {
                "_attributes": {
                  "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                  "NOME-DA-AREA-DO-CONHECIMENTO": "",
                  "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Intelig ncia Artificial",
                  "NOME-DA-ESPECIALIDADE": ""
                }
              },
              "AREA-DO-CONHECIMENTO-2": {
                "_attributes": {
                  "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                  "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
                  "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Engenharia de Software",
                  "NOME-DA-ESPECIALIDADE": ""
                }
              }
            },
            "INFORMACOES-ADICIONAIS": {
              "_attributes": {
                "DESCRICAO-INFORMACOES-ADICIONAIS": "A Educa  o Online vem crescendo bastante nos  ltimos anos e diversos fatores propiciam esse&#10;crescimento. Atualmente, existem diversas tecnologias que d o apoio   Educa  o Online. Nesse&#10;contexto, temos milh es de usu rios, produzindo uma imensa quantidade de dados educacionais,&#10;que podem, de certa forma, sobrecarregar professores e tutores, deixando o aluno na espera por&#10;feedback. Com a utiliza  o de t cnicas computacionais de corre  o autom tica, t m-se uma&#10;fluidez maior de atividades e diminui  o relevante na sobrecarga de trabalho do professor, deixando-o&#10;livre para o desenvolvimento de outras atividades. Este trabalho apresenta um Analisador&#10;Ortogr fico-Gramatical para avalia  o autom tica de Atividades escritas em L ngua Portuguesa&#10;com uso de Algoritmos Gen ticos e Processamento de Linguagem Natural  PLN. O Sistema&#10;proposto foi avaliado com experimento com 20 reda  es, identificando e avaliando os erros&#10;de acordo com os erros j  separados por corretores humanos. Os resultados obtidos demonstraram&#10;uma grande taxa de acerto a identifica  o e corre  o.",
                "DESCRICAO-INFORMACOES-ADICIONAIS-INGLES": "The use of information and communication technologies is increasingly standing out in Education.&#10;Currently, there are several technologies that provide support for distance learning.&#10;Before this scenario, there are millions of users with an huge amount of educational data,&#10;which evaluation burdens teachers and consume their time, leaving the students waiting for the&#10;evaluation of their performance. With the use of automatic correction technics performed by&#10;computers, there is a bigger fluidity of activities and a relevant decrease of work for the teachers,&#10;leaving them free to evaluate others activities. This paper presents a lexical-Syntactic&#10;Analyzer for automatic evaluation of written Activities in Portuguese using Genetic Algorithms&#10;and Natural Language Processing  NLP. The proposed system was evaluated by experiment,&#10;about 20 written activities and it found and evaluated the mistakes previously identified by&#10;human correctors. The results demonstrated a high rate of appropriate suggestions for the&#10;errors detected."
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "5",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "A semi-automatic system to evaluate the performance and scalability of ontology persistent APIs",
                "ANO-DO-ARTIGO": "2016",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Ingl s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "[http://www.sciencedirect.com/science/article/pii/S0167642316301605][doi:10.1016/j.scico.2016.10.005]",
                "FLAG-RELEVANCIA": "SIM",
                "DOI": "10.1016/j.scico.2016.10.005",
                "TITULO-DO-ARTIGO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "Science of Computer Programming (Print)",
                "ISSN": "01676423",
                "VOLUME": "136",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "43",
                "PAGINA-FINAL": "59",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ELIAS, ENDHE",
                  "NOME-PARA-CITACAO": "ELIAS, ENDHE",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "5469637266689195"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ISOTANI, SEIJI",
                  "NOME-PARA-CITACAO": "ISOTANI, SEIJI",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": "3030047284254233"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "HOLANDA, OLAVO",
                  "NOME-PARA-CITACAO": "HOLANDA, OLAVO",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BRITO, PATRICK H.S.",
                  "NOME-PARA-CITACAO": "BRITO, PATRICK H.S.",
                  "ORDEM-DE-AUTORIA": "6",
                  "NRO-ID-CNPQ": ""
                }
              }
            ],
            "PALAVRAS-CHAVE": {
              "_attributes": {
                "PALAVRA-CHAVE-1": "Ontology persistence",
                "PALAVRA-CHAVE-2": "Performance",
                "PALAVRA-CHAVE-3": "Scalability",
                "PALAVRA-CHAVE-4": "Semi-automatic system",
                "PALAVRA-CHAVE-5": "",
                "PALAVRA-CHAVE-6": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "14",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "On the joint use of Artificial Intelligence and Brain-Imaging Techniques in Technology-enhanced Learning Environments: A Systematic Literature Review",
                "ANO-DO-ARTIGO": "2021",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "VARIOS",
                "HOME-PAGE-DO-TRABALHO": "[http://ojs.sector3.com.br/index.php/rbie/article/view/v29p502][doi:10.5753/rbie.2021.29.0.502]",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "10.5753/rbie.2021.29.0.502",
                "TITULO-DO-ARTIGO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "REVISTA BRASILEIRA DE INFORM TICA NA EDUCA  O",
                "ISSN": "14145685",
                "VOLUME": "29",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "502",
                "PAGINA-FINAL": "518",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "TEN RIO, KAMILLA",
                  "NOME-PARA-CITACAO": "TEN RIO, KAMILLA",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ACCETE, VICTOR",
                  "NOME-PARA-CITACAO": "ACCETE, VICTOR",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "REMIGIO, STERFANNO",
                  "NOME-PARA-CITACAO": "REMIGIO, STERFANNO",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "DA SILVA, ALAN PEDRO",
                  "NOME-PARA-CITACAO": "DA SILVA, ALAN PEDRO",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "DERMEVAL, DIEGO",
                  "NOME-PARA-CITACAO": "DERMEVAL, DIEGO",
                  "ORDEM-DE-AUTORIA": "6",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG IBERT",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG IBERT",
                  "ORDEM-DE-AUTORIA": "7",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "MARQUES, LEONARDO BRAND O",
                  "NOME-PARA-CITACAO": "MARQUES, LEONARDO BRAND O",
                  "ORDEM-DE-AUTORIA": "8",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "41",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "Tecnologias Educacionais Estereotipadas: Um desafio a ser enfrentado",
                "ANO-DO-ARTIGO": "2022",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Portugu s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "",
                "FLAG-RELEVANCIA": "SIM",
                "DOI": "10.5753/rbie.2022.2293",
                "TITULO-DO-ARTIGO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "Revista Brasileira de Inform tica na Educa  o (RBIE)",
                "ISSN": "23176121",
                "VOLUME": "30",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "73",
                "PAGINA-FINAL": "107",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Seiji Isotani",
                  "NOME-PARA-CITACAO": "Isotani S.",
                  "ORDEM-DE-AUTORIA": "10",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Kamila Benevides",
                  "NOME-PARA-CITACAO": "Benevides K.",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ester Andrade",
                  "NOME-PARA-CITACAO": "Andrade, E.",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Jo o Nascimento",
                  "NOME-PARA-CITACAO": "Nascimento, J.",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Kelly Silva",
                  "NOME-PARA-CITACAO": "Silva, K.",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ig Ibert Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                  "ORDEM-DE-AUTORIA": "6",
                  "NRO-ID-CNPQ": "4038730280834132"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Marcos Pereira",
                  "NOME-PARA-CITACAO": "Pereira, M.",
                  "ORDEM-DE-AUTORIA": "7",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Sheyla Fernandes",
                  "NOME-PARA-CITACAO": "Fernandes, S.",
                  "ORDEM-DE-AUTORIA": "8",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Cristiana Carina BLD Bittencourt",
                  "NOME-PARA-CITACAO": "Carina BLD Bittencourt, C.",
                  "ORDEM-DE-AUTORIA": "9",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "43",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "Does gender stereotype threat affects the levels of aggressiveness, learning and flow in gamified learning environments?: An experimental study",
                "ANO-DO-ARTIGO": "2022",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Ingl s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "[doi:10.1007/s10639-022-11220-3]",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "10.1007/s10639-022-11220-3",
                "TITULO-DO-ARTIGO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "Education and Information Technologies",
                "ISSN": "13602357",
                "VOLUME": "1",
                "FASCICULO": "",
                "SERIE": "",
                "PAGINA-INICIAL": "1",
                "PAGINA-FINAL": "",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ANDRADE, ESTER",
                  "NOME-PARA-CITACAO": "ANDRADE, ESTER",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BENEVIDES, KAMILA",
                  "NOME-PARA-CITACAO": "BENEVIDES, KAMILA",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "SILVA, KELLY",
                  "NOME-PARA-CITACAO": "SILVA, KELLY",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "NASCIMENTO, JO O",
                  "NOME-PARA-CITACAO": "NASCIMENTO, JO O",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG",
                  "ORDEM-DE-AUTORIA": "6",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "PEREIRA, MARCOS",
                  "NOME-PARA-CITACAO": "PEREIRA, MARCOS",
                  "ORDEM-DE-AUTORIA": "7",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "FERNANDES, SHEYLA",
                  "NOME-PARA-CITACAO": "FERNANDES, SHEYLA",
                  "ORDEM-DE-AUTORIA": "8",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ISOTANI, SEIJI",
                  "NOME-PARA-CITACAO": "ISOTANI, SEIJI",
                  "ORDEM-DE-AUTORIA": "9",
                  "NRO-ID-CNPQ": "3030047284254233"
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "42",
              "ORDEM-IMPORTANCIA": ""
            },
            "DADOS-BASICOS-DO-ARTIGO": {
              "_attributes": {
                "NATUREZA": "COMPLETO",
                "TITULO-DO-ARTIGO": "Two billion registered students affected by stereotyped educational environments: an analysis of gender-based color bias",
                "ANO-DO-ARTIGO": "2022",
                "PAIS-DE-PUBLICACAO": "",
                "IDIOMA": "Ingl s",
                "MEIO-DE-DIVULGACAO": "MEIO_DIGITAL",
                "HOME-PAGE-DO-TRABALHO": "[doi:10.1057/s41599-022-01220-6]",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "10.1057/s41599-022-01220-6",
                "TITULO-DO-ARTIGO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DO-ARTIGO": {
              "_attributes": {
                "TITULO-DO-PERIODICO-OU-REVISTA": "Humanities & Social Sciences Communications",
                "ISSN": "26629992",
                "VOLUME": "9",
                "FASCICULO": "",
                "SERIE": "1",
                "PAGINA-INICIAL": "249",
                "PAGINA-FINAL": "",
                "LOCAL-DE-PUBLICACAO": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "SANTOS, J RIO",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "BITTENCOURT, IG",
                  "NOME-PARA-CITACAO": "BITTENCOURT, IG",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "REIS, MARCELO",
                  "NOME-PARA-CITACAO": "REIS, MARCELO",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "CHALCO, GEISER",
                  "NOME-PARA-CITACAO": "CHALCO, GEISER",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "ISOTANI, SEIJI",
                  "NOME-PARA-CITACAO": "ISOTANI, SEIJI",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": "3030047284254233"
                }
              }
            ]
          }
        ]
      }
    },
    "PRODUCAO-TECNICA": {
      "DEMAIS-TIPOS-DE-PRODUCAO-TECNICA": {
        "APRESENTACAO-DE-TRABALHO": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "15"
            },
            "DADOS-BASICOS-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NATUREZA": "CONGRESSO",
                "TITULO": "Conquistando com o Resto: Um Jogo Para o Ensino de Conceitos de Divis o",
                "ANO": "2015",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NOME-DO-EVENTO": "IV Congresso Brasileiro de Inform tica na Educa  o - CBIE 2015",
                "INSTITUICAO-PROMOTORA": "X Confer ncia Latino-Americana de Objetos e Tecnologias de Aprendizagem - LACLO 2015",
                "LOCAL-DA-APRESENTACAO": "Alagoas",
                "CIDADE-DA-APRESENTACAO": "Macei ",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "OLIVEIRA, WILK",
                  "NOME-PARA-CITACAO": "OLIVEIRA, WILK",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "0107471108162891"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "Santos, J rio Jos ",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Daniel Borges",
                  "NOME-PARA-CITACAO": "BORGES, D.",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": "0755689140229552"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ig Ibert Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": "4038730280834132"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "NOME-PARA-CITACAO": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "16"
            },
            "DADOS-BASICOS-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NATUREZA": "CONGRESSO",
                "TITULO": "Desafios com Palitos: Um Jogo Para o Ensino de Conceitos Espec ficos de Matem tica",
                "ANO": "2015",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NOME-DO-EVENTO": "IV Congresso Brasileiro de Inform tica na Educa  o - CBIE 2015",
                "INSTITUICAO-PROMOTORA": "X Confer ncia Latino-Americana de Objetos e Tecnologias de Aprendizagem - LACLO 2015",
                "LOCAL-DA-APRESENTACAO": "Alagoas",
                "CIDADE-DA-APRESENTACAO": "Macei ",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "OLIVEIRA, WILK",
                  "NOME-PARA-CITACAO": "OLIVEIRA, WILK",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": "0107471108162891"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Daniel Borges",
                  "NOME-PARA-CITACAO": "BORGES, D.",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": "0755689140229552"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "Santos, J rio Jos ",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ig Ibert Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                  "ORDEM-DE-AUTORIA": "4",
                  "NRO-ID-CNPQ": "4038730280834132"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "NOME-PARA-CITACAO": "JUNOIR, CLOVIS GOMES DA SILVA",
                  "ORDEM-DE-AUTORIA": "5",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "17"
            },
            "DADOS-BASICOS-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NATUREZA": "CONGRESSO",
                "TITULO": "AVALIA  O AUTOM TICA DE ATIVIDADES ESCRITAS BASEADA EM ALGORITMO GEN TICO E PROCESSAMENTO DE LINGUAGEM NATURAL: Avaliador Ortogr fico-Gramatical",
                "ANO": "2015",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
              }
            },
            "DETALHAMENTO-DA-APRESENTACAO-DE-TRABALHO": {
              "_attributes": {
                "NOME-DO-EVENTO": "IV Congresso Brasileiro de Inform tica na Educa  o - CBIE 2015",
                "INSTITUICAO-PROMOTORA": "X Confer ncia Latino-Americana de Objetos e Tecnologias de Aprendizagem - LACLO 2015 - CTD-IE",
                "LOCAL-DA-APRESENTACAO": "Alagoas",
                "CIDADE-DA-APRESENTACAO": "Macei ",
                "NOME-DO-EVENTO-INGLES": ""
              }
            },
            "AUTORES": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO": "Santos, J rio Jos ",
                  "ORDEM-DE-AUTORIA": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ranilson Paiva",
                  "NOME-PARA-CITACAO": "Paiva R.",
                  "ORDEM-DE-AUTORIA": "2",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-AUTOR": "Ig Ibert Bittencourt",
                  "NOME-PARA-CITACAO": "BITTENCOURT, I. I.",
                  "ORDEM-DE-AUTORIA": "3",
                  "NRO-ID-CNPQ": "4038730280834132"
                }
              }
            ]
          }
        ],
        "ORGANIZACAO-DE-EVENTO": {
          "_attributes": {
            "SEQUENCIA-PRODUCAO": "40"
          },
          "DADOS-BASICOS-DA-ORGANIZACAO-DE-EVENTO": {
            "_attributes": {
              "TIPO": "CONGRESSO",
              "NATUREZA": "ORGANIZACAO",
              "TITULO": "Cidades Inteligentes: Desafios para a Computa  o - XXXIII Congresso da Sociedade Brasileira de Computa  o (CSBC 2013)",
              "ANO": "2013",
              "PAIS": "Brasil",
              "IDIOMA": "Portugu s",
              "MEIO-DE-DIVULGACAO": "NAO_INFORMADO",
              "HOME-PAGE-DO-TRABALHO": "",
              "FLAG-RELEVANCIA": "NAO",
              "DOI": "",
              "TITULO-INGLES": "",
              "FLAG-DIVULGACAO-CIENTIFICA": "NAO"
            }
          },
          "DETALHAMENTO-DA-ORGANIZACAO-DE-EVENTO": {
            "_attributes": {
              "INSTITUICAO-PROMOTORA": "SOCIEDADE BRASILEIRA DE COMPUTA  O",
              "DURACAO-EM-SEMANAS": "1",
              "FLAG-EVENTO-ITINERANTE": "N",
              "FLAG-CATALOGO": "",
              "LOCAL": "Alagoas",
              "CIDADE": "Macei "
            }
          },
          "AUTORES": [
            {
              "_attributes": {
                "NOME-COMPLETO-DO-AUTOR": "Paulo Cunha",
                "NOME-PARA-CITACAO": "Cunha P.",
                "ORDEM-DE-AUTORIA": "1",
                "NRO-ID-CNPQ": ""
              }
            },
            {
              "_attributes": {
                "NOME-COMPLETO-DO-AUTOR": "Eliana Almeida",
                "NOME-PARA-CITACAO": "Almeida E.",
                "ORDEM-DE-AUTORIA": "2",
                "NRO-ID-CNPQ": ""
              }
            },
            {
              "_attributes": {
                "NOME-COMPLETO-DO-AUTOR": "Leandro Dias",
                "NOME-PARA-CITACAO": "Dias L.",
                "ORDEM-DE-AUTORIA": "3",
                "NRO-ID-CNPQ": ""
              }
            },
            {
              "_attributes": {
                "NOME-COMPLETO-DO-AUTOR": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO": "SANTOS, J.",
                "ORDEM-DE-AUTORIA": "4",
                "NRO-ID-CNPQ": ""
              }
            }
          ]
        }
      }
    },
    "OUTRA-PRODUCAO": {
      "ORIENTACOES-CONCLUIDAS": {
        "OUTRAS-ORIENTACOES-CONCLUIDAS": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "9"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "TRABALHO_DE_CONCLUSAO_DE_CURSO_GRADUACAO",
                "TIPO": "",
                "TITULO": "Controle Interno e Tecnologia da Informa  o: Um Estudo sobre Aplica  o de Recursos Tecnol gicos de Controle no Munic pio de Oliven a - Alagoas",
                "ANO": "2017",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Bruno Menezes Silva",
                "CODIGO-INSTITUICAO": "033100000009",
                "NOME-DA-INSTITUICAO": "Universidade Federal de Alagoas",
                "CODIGO-CURSO": "60750898",
                "NOME-DO-CURSO": "Sistemas de Informa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "10"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "TRABALHO_DE_CONCLUSAO_DE_CURSO_GRADUACAO",
                "TIPO": "",
                "TITULO": "JOINT-LD: Java Ontology Integrated Toolkit for Linked Data",
                "ANO": "2017",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Williams Louren o de Alcantara",
                "CODIGO-INSTITUICAO": "033100000009",
                "NOME-DA-INSTITUICAO": "Universidade Federal de Alagoas",
                "CODIGO-CURSO": "60324813",
                "NOME-DO-CURSO": "Ci ncia da Computa  o",
                "FLAG-BOLSA": "SIM",
                "CODIGO-AGENCIA-FINANCIADORA": "002200000000",
                "NOME-DA-AGENCIA": "Conselho Nacional de Desenvolvimento Cient fico e Tecnol gico",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "31"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Gen tica no Ensino M dio: as m dias digitais e a compreens o de conte dos abstratos",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Adeline Gisele Teixeira da Silva",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "32"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Gami&#64257;cando Disciplinas do Ensino T cnico",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Adriano de Oliveira Cota",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "33"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Ensino de fun  o a&#64257;m com tecnologias educacionais: Um design instrucional adaptado inserido no Google Classroom",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Ana Lucia Dos Santos Rocha",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "35"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Proposta sobre ensino de fun  o quadr tica no 1  ano ensino m dio em AVA",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Michele Bandeira da Silva",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "36"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Metodologias Ativas no processo de Ensino-Aprendizagem da Hist ria Antiga:Um estudo com o Moodle",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "M nica de Faria Bergqvist da Costa",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "37"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Design educacional adaptado para EAD em tecnologias educacionais: Google Forms em forma  o docente contextualizada em atividades para o 5  ano do ensino fundamental I",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Paula Simone Cordeiro Capaz Borges",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "38"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Letramento digital como ferramenta de empoderamento do estudante",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Tainan Souza Santos Aizza",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "39"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Aprendendo sobre veracidade de informa  es: Desenvolvimento e avalia  o de curso EAD que aplica M todo Cient &#64257;co na an lise de not cias",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Vivian Vieira",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "34"
            },
            "DADOS-BASICOS-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NATUREZA": "MONOGRAFIA_DE_CONCLUSAO_DE_CURSO_APERFEICOAMENTO_E_ESPECIALIZACAO",
                "TIPO": "",
                "TITULO": "Modelos de trabalho em software aplic veis   teoria Vygotskyana no ensino de l gica de programa  o",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "FLAG-RELEVANCIA": "NAO",
                "DOI": "",
                "TITULO-INGLES": "",
                "TIPO-INGLES": ""
              }
            },
            "DETALHAMENTO-DE-OUTRAS-ORIENTACOES-CONCLUIDAS": {
              "_attributes": {
                "NOME-DO-ORIENTADO": "Fernando Cesar Camilo",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-DA-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-CURSO": "90000000",
                "NOME-DO-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "FLAG-BOLSA": "NAO",
                "CODIGO-AGENCIA-FINANCIADORA": "",
                "NOME-DA-AGENCIA": "",
                "TIPO-DE-ORIENTACAO-CONCLUIDA": "CO_ORIENTADOR",
                "NUMERO-DE-PAGINAS": "",
                "NUMERO-ID-ORIENTADO": "",
                "NOME-DO-CURSO-INGLES": ""
              }
            }
          }
        ]
      }
    },
    "DADOS-COMPLEMENTARES": {
      "FORMACAO-COMPLEMENTAR": {
        "FORMACAO-COMPLEMENTAR-CURSO-DE-CURTA-DURACAO": {
          "_attributes": {
            "SEQUENCIA-FORMACAO": "4",
            "NIVEL": "F",
            "CARGA-HORARIA": "20",
            "CODIGO-INSTITUICAO": "000700000992",
            "NOME-INSTITUICAO": "+A Educa  o",
            "CODIGO-ORGAO": "",
            "NOME-ORGAO": "",
            "CODIGO-CURSO": "90000001",
            "NOME-CURSO": "Forma  o em Metodologias Ativas na Educa  o a Dist ncia  Utilizando o Peer",
            "STATUS-DO-CURSO": "CONCLUIDO",
            "ANO-DE-INICIO": "2021",
            "ANO-DE-CONCLUSAO": "2021",
            "NOME-CURSO-INGLES": ""
          }
        }
      },
      "PARTICIPACAO-EM-BANCA-TRABALHOS-CONCLUSAO": {
        "PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "18"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "AVA e forma  o continuada de professores alfabetizadores: desenvolvimento e avalia  o de curso a dist ncia",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Adriana Medeiros Reis",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "19"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Uso do jogo educacional A  ltima  rvore em tr s diferentes cen rios de aprendizagem para desenvolvimento do pensamento computacional.",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Alexandre Almeida Machado",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "20"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "The relationship between user types and story-based gami&#64257;cation: Analysis of preference and accomplishment in educational context",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Ana Cl udia Guimar es Santos",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "21"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Doc ncia Disruptiva: Um caminho para Educa  o Mediada por Tecnologias",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Cristiane Jorge de Lima Bon&#64257;m",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "22"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Pensamento computacional como forma de avan ar na aprendizagem de Matem tica - Um compartilhamento entre o pensamento computacional e o pensamento matem tico.",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Eliane Cruz de Santana Galv o",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "23"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Habilidades Socioemocionais na Educa  o: Um curso EAD para forma  o de professores",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Luciana de Freitas Borrelli",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "24"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Estudo quanto a percep  o dos graduandos sobre aspectos que contribu ram para sua forma  o integral, em cursos tecnol gicos superiores presenciais, no Estado de S o Paulo, de acordo com o ENADE 2018",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Luciana Passos da Silva",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "25"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Explorando Gami&#64257;ca  o e a Teoria da Experi ncia de Fluxo no Ensino de F sica: An lise no Crasscraft e Ensino de Vetor Velocidade e Vetor Acelera  o",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Luciano Morais Oliveira",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "26"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "A Realidade Virtual auxiliando o processo de ensino e aprendizagem de Geogra&#64257;a no Ensino Fundamental II: Proposta de Design de Conte do imersivo baseado na BNCC",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Luis Ricardo da Silva Batista",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "27"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Elabora  o do Curr culo de Refer ncia para a Educa  o Pro&#64257;ssional T cnica de N vel M dio em Tecnologia e Computa  o: um estudo de caso",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Maria Lidiana Ferreira Osmundo",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "28"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "O uso de REAs e o ensino de Hist ria: conceitos, interpreta  es e possibilidades",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Marysther Oliveira do Nascimento",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "29"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "Aspectos relevantes para o desenvolvimento de MOOCs de alta qualidade, sob a perspectiva da experi ncia de aprendizagem.",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Renata Pires Quaresma",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "30"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NATUREZA": "Curso de aperfei oamento/especializa  o",
                "TITULO": "A percep  o do professor do ensino fundamental acerca da pr tica de ensino remoto",
                "ANO": "2020",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-APERFEICOAMENTO-ESPECIALIZACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Valquiria Elena Gon alves Theodoro",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "90000000",
                "NOME-CURSO": "Especializa  o em Computa  o Aplicada   Educa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": {
              "_attributes": {
                "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "Santos, J rio Jos ",
                "ORDEM-PARTICIPANTE": "1",
                "NRO-ID-CNPQ": ""
              }
            }
          }
        ],
        "PARTICIPACAO-EM-BANCA-DE-GRADUACAO": [
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "11"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NATUREZA": "Gradua  o",
                "TITULO": "Beili - Sistema de Buscas em Documentos",
                "ANO": "2019",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Yago Rafael Pessoa",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "60164018",
                "NOME-CURSO": "Sistemas de Informa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "Adenilso da Silva Sim o",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "SIMAO, A. S.",
                  "ORDEM-PARTICIPANTE": "1",
                  "NRO-ID-CNPQ": "9836776931160228"
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "SANTOS, J RIO",
                  "ORDEM-PARTICIPANTE": "2",
                  "NRO-ID-CNPQ": ""
                }
              }
            ],
            "AREAS-DO-CONHECIMENTO": {
              "AREA-DO-CONHECIMENTO-1": {
                "_attributes": {
                  "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                  "NOME-DA-AREA-DO-CONHECIMENTO": "",
                  "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Minera  o de Textos",
                  "NOME-DA-ESPECIALIDADE": ""
                }
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "12"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NATUREZA": "Gradua  o",
                "TITULO": "Blockchain Technology Applications for Financial Transparency in Non Profit Organizations",
                "ANO": "2019",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": "Blockchain Technology Applications for Financial Transparency in Non Profit Organizations"
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Igor Vinicies Alvarenga Marinelli",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "60197544",
                "NOME-CURSO": "Engenharia de Computa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "Kalinka Regina Lucas Jaquie Castelo Branco",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "BRANCO, K. R. L. J. C.",
                  "ORDEM-PARTICIPANTE": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "SANTOS, J.",
                  "ORDEM-PARTICIPANTE": "2",
                  "NRO-ID-CNPQ": ""
                }
              }
            ],
            "PALAVRAS-CHAVE": {
              "_attributes": {
                "PALAVRA-CHAVE-1": "Blockchain",
                "PALAVRA-CHAVE-2": "Ethereum",
                "PALAVRA-CHAVE-3": "Smart Contract",
                "PALAVRA-CHAVE-4": "",
                "PALAVRA-CHAVE-5": "",
                "PALAVRA-CHAVE-6": ""
              }
            },
            "AREAS-DO-CONHECIMENTO": {
              "AREA-DO-CONHECIMENTO-1": {
                "_attributes": {
                  "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
                  "NOME-DA-AREA-DO-CONHECIMENTO": "",
                  "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "Engenharia de Software",
                  "NOME-DA-ESPECIALIDADE": ""
                }
              }
            },
            "INFORMACOES-ADICIONAIS": {
              "_attributes": {
                "DESCRICAO-INFORMACOES-ADICIONAIS": "",
                "DESCRICAO-INFORMACOES-ADICIONAIS-INGLES": "In 2016, an estimated USD 500 billion was donated to charities worldwide. Charities often rely on third-party marketing firms for their fundraising activities to better compete for a portion of these funds. Traditional marketing methods used by these firms such as telemarketing and street advertisement are failing to find traction with Millennials. In addition, many of these firms have engaged in tactics that undermine the trust of the public and ruin the reputation of the charity industry. In an age where we can track the delivery of a pizza or see how far away our Uber is, why can t we track our money from the moment we donate all the way to the cause? Millennials expect more transparency and control over their donations, including the ability to connect emotionally with receivers by seeing the direct impact their contribution has made. As the majority of charitable donations come from an ageing population, fundraising approaches need to better engage Millennials or there will be a significant reduction in donations from the general public in the next 10 to 20 years. This project highlights the main issues inhibiting people from giving and demonstrates how to use blockchain technology to radically transform the giving experience. In order for people to see exactly where their money is going and the proof of impact of their action, ensuring each transaction is transparent by using an immutable public ledger. Unique Digital Identities (UDID) are created to validate receivers and initiate smart contracts, ensuring funds are only used when the desired impact is confirmed."
              }
            }
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "13"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NATUREZA": "Gradua  o",
                "TITULO": "BotAnalyzer: Uma ferramenta para reconhecer as intera  es entre aluno - chatterbot",
                "ANO": "2019",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Samuel de Oliveira Gamito",
                "CODIGO-INSTITUICAO": "006700000002",
                "NOME-INSTITUICAO": "Universidade de S o Paulo",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "60358890",
                "NOME-CURSO": "Engenharia de Computa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "Ellen Francine Barbosa",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "BARBOSA, E. F.",
                  "ORDEM-PARTICIPANTE": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "SANTOS, J.",
                  "ORDEM-PARTICIPANTE": "2",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          },
          {
            "_attributes": {
              "SEQUENCIA-PRODUCAO": "6"
            },
            "DADOS-BASICOS-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NATUREZA": "Gradua  o",
                "TITULO": "Does gender stereotype threat in gamified educational environments cause anxiety? An experimental study.",
                "ANO": "2016",
                "PAIS": "Brasil",
                "IDIOMA": "Portugu s",
                "HOME-PAGE": "",
                "DOI": "",
                "TITULO-INGLES": ""
              }
            },
            "DETALHAMENTO-DA-PARTICIPACAO-EM-BANCA-DE-GRADUACAO": {
              "_attributes": {
                "NOME-DO-CANDIDATO": "Josm rio de Albuquerque Silva",
                "CODIGO-INSTITUICAO": "033100000009",
                "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
                "CODIGO-ORGAO": "",
                "NOME-ORGAO": "",
                "CODIGO-CURSO": "60318937",
                "NOME-CURSO": "Ci ncia da Computa  o",
                "NOME-CURSO-INGLES": ""
              }
            },
            "PARTICIPANTE-BANCA": [
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "J rio Jos  dos Santos J nior",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "SANTOS, J RIO",
                  "ORDEM-PARTICIPANTE": "1",
                  "NRO-ID-CNPQ": ""
                }
              },
              {
                "_attributes": {
                  "NOME-COMPLETO-DO-PARTICIPANTE-DA-BANCA": "Jorge Artur Pe anha de Miranda Coelho",
                  "NOME-PARA-CITACAO-DO-PARTICIPANTE-DA-BANCA": "COELHO, J. A. P. M.",
                  "ORDEM-PARTICIPANTE": "2",
                  "NRO-ID-CNPQ": ""
                }
              }
            ]
          }
        ]
      },
      "INFORMACOES-ADICIONAIS-INSTITUICOES": {
        "INFORMACAO-ADICIONAL-INSTITUICAO": [
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000100000991",
              "SIGLA-INSTITUICAO": "COOPEMA",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000200000993",
              "SIGLA-INSTITUICAO": "CLGP",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000300000995",
              "SIGLA-INSTITUICAO": "S2",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000400000997",
              "SIGLA-INSTITUICAO": "",
              "SIGLA-UF-INSTITUICAO": "",
              "SIGLA-PAIS-INSTITUICAO": "",
              "NOME-PAIS-INSTITUICAO": "",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000500000999",
              "SIGLA-INSTITUICAO": "INTELI",
              "SIGLA-UF-INSTITUICAO": "SP",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000600000990",
              "SIGLA-INSTITUICAO": "ENEURON",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "000700000992",
              "SIGLA-INSTITUICAO": "+A",
              "SIGLA-UF-INSTITUICAO": "SP",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "002200000000",
              "SIGLA-INSTITUICAO": "CNPq",
              "SIGLA-UF-INSTITUICAO": "DF",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "SIM",
              "FLAG-INSTITUICAO-DE-ENSINO": "SIM"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "006700000002",
              "SIGLA-INSTITUICAO": "USP",
              "SIGLA-UF-INSTITUICAO": "SP",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "SIM"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "033100000009",
              "SIGLA-INSTITUICAO": "UFAL",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "SIM"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "033111001990",
              "SIGLA-INSTITUICAO": "",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "045000000000",
              "SIGLA-INSTITUICAO": "CAPES",
              "SIGLA-UF-INSTITUICAO": "DF",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "SIM",
              "FLAG-INSTITUICAO-DE-ENSINO": "SIM"
            }
          },
          {
            "_attributes": {
              "CODIGO-INSTITUICAO": "JDN200000008",
              "SIGLA-INSTITUICAO": "MEUTUTOR",
              "SIGLA-UF-INSTITUICAO": "AL",
              "SIGLA-PAIS-INSTITUICAO": "BRA",
              "NOME-PAIS-INSTITUICAO": "Brasil",
              "FLAG-AGENCIA-FOMENTO": "NAO",
              "FLAG-INSTITUICAO-DE-ENSINO": "NAO"
            }
          }
        ]
      },
      "INFORMACOES-ADICIONAIS-CURSOS": {
        "INFORMACAO-ADICIONAL-CURSO": [
          {
            "_attributes": {
              "CODIGO-CURSO": "33050040",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "006742000000",
              "NOME-INSTITUICAO": "Instituto de Ci ncias Matem ticas e de Computa  o",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "MESTRADO_DOUTORADO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60164018",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "006700000002",
              "NOME-INSTITUICAO": "Universidade de S o Paulo",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60197544",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "006700000002",
              "NOME-INSTITUICAO": "Universidade de S o Paulo",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60281693",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60318937",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60324813",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60324813",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60358890",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "006700000002",
              "NOME-INSTITUICAO": "Universidade de S o Paulo",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60472146",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "MESTRADO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "60750898",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "033100000009",
              "NOME-INSTITUICAO": "Universidade Federal de Alagoas",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "OUTROS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "GRADUACAO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "90000000",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "006700000002",
              "NOME-INSTITUICAO": "Universidade de S o Paulo",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_EXATAS_E_DA_TERRA",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Ci ncia da Computa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "APERFEICOAMENTO"
            }
          },
          {
            "_attributes": {
              "CODIGO-CURSO": "90000001",
              "CODIGO-ORGAO": "",
              "NOME-ORGAO": "",
              "CODIGO-INSTITUICAO": "000700000992",
              "NOME-INSTITUICAO": "+A Educa  o",
              "NOME-GRANDE-AREA-DO-CONHECIMENTO": "CIENCIAS_HUMANAS",
              "NOME-DA-AREA-DO-CONHECIMENTO": "Educa  o",
              "NOME-DA-SUB-AREA-DO-CONHECIMENTO": "",
              "NOME-DA-ESPECIALIDADE": "",
              "NIVEL-CURSO": "CURSO_DE_CURTA_DURACAO"
            }
          }
        ]
      }
    }
  }
}"
        }
        const result = await axios.post(`https://back-sucupira-ppgi.herokuapp.com/docente/${payload.id}/carregar_json/`, teste)
        return result.data
    }
}
export const mutations = {}

export default {
    namespaced: true,
    state,
    mutations,
    actions,
    getters
  }